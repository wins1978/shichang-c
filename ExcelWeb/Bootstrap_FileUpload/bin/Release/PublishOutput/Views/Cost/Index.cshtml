<script type="text/javascript" src="~/Scripts/knockout-3.4.2.js"></script>
<script type="text/javascript" src="~/Scripts/knockout.mapping-latest.js"></script>
<script type="text/javascript" src="~/Scripts/knockout.bootstraptable.js"></script>
<script type="text/javascript">
    var moneyType = '@{@ViewBag.MoneyType}';

</script>
<!--http://www.cnblogs.com/landeanfen/p/5400654.html-->
<!--https://www.devbridge.com/articles/knockout-a-real-world-example/-->
<div class="container body-content">
    <div class="panel panel-default">
        <div class="panel-heading"></div>
        <div class="panel-heading">客户预收款</div>
        <button id="btn_export" type="button" class="btn btn-primary">
            <span class="glyphicon glyphicon-plus" aria-hidden="true"></span>导出EXCEL
        </button>
        <div class="panel-heading">
            <table id="tb_dept" data-bind="myBootstrapTable:$root">
                <thead id="headers">
                    <tr>
                        <th name="tdVendor" data-field="VENDOR">客户</th>
                        <th data-field="LAST_MON_REMAIN">上月余额</th>
                        <th data-field="CUR_MON_COST">本月消费</th>
                        <th data-field="CUR_MON_INCOME">本月收款</th>
                        <th data-field="CUR_MON_REMAIN">本月余额</th>
                        <th data-field="COST_ALERT">余额警戒线</th>
                        <th name="tdLink">&nbsp;</th>
                    </tr>
                </thead>
            </table>
        </div>
    </div>
</div>

<script type="text/javascript">
    $(function () {
        //1、初始化表格
        tableInit.Init();
        $('#btn_export').on("click", function () {
            method1('tb_dept');
        });
 
    });
    var timer = null;
    var isRun = null;

    function deleteItem(parentViewModel) {
        var deletingItem = this; // $data, passed when binding from view

        if (confirm("Are you sure you want to delete this item?")) {
            parentViewModel.items.remove(deletingItem);
        }
    };

    function bindLink() {
        
        var len = $("#tb_dept tbody tr").length;
        if (len > 1) {
            isRun = "";
            if (timer != null) clearTimeout(timer);
        } else {
            isRun = null;
            return;
        }

        $("#tb_dept tbody tr").each(function () {
            var vendor = $(this).find('td:eq(0)').text();
            var remain = $(this).find('td:eq(4)').text();
            var remainI = parseInt(remain);
            if (remainI < 0) {
                $(this).css('background-color', 'rgb(242, 222, 222)');
            }
            var url = url_p + '/CostEdit?vendor=' + vendor;
            var htm = "<a href='" + url+"'>详细信息</a>";
            $(this).find('td:eq(6)').html(htm);

        });
    }

    //初始化表格
    var tableInit = {
        Init: function () {
            //绑定table的viewmodel
            this.myViewModel = new ko.bootstrapTableViewModel({
                url: url_p + '/Cost/GetCostView',         //请求后台的URL（*）
                method: 'get',                      //请求方式（*）
                //toolbar: '#toolbar',                //工具按钮用哪个容器
                queryParams: function (param) {
                    return { limit: param.limit, offset: param.offset, moneyType: moneyType };
                },//传递参数（*）
                pagination: true,                   //是否显示分页（*）
                sidePagination: "server",           //分页方式：client客户端分页，server服务端分页（*）
                pageNumber: 1,                      //初始化加载第一页，默认第一页
                pageSize: 2000,                       //每页的记录行数（*）
                pageList: [10, 25, 50, 100]        //可供选择的每页的行数（*）
            });
            ko.applyBindings(this.myViewModel, document.getElementById("tb_dept"));

            timer = setTimeout(function () {
                if (isRun == null) {
                    isRun = "";
                    bindLink();
                }
                    
            }, 100);
        }
        
    };
</script>

<script type="text/javascript" language="javascript">
    var idTmr;
    function getExplorer() {
        var explorer = window.navigator.userAgent;
        //ie
        if (explorer.indexOf("MSIE") >= 0) {
            return 'ie';
        }
        //firefox
        else if (explorer.indexOf("Firefox") >= 0) {
            return 'Firefox';
        }
        //Chrome
        else if (explorer.indexOf("Chrome") >= 0) {
            return 'Chrome';
        }
        //Opera
        else if (explorer.indexOf("Opera") >= 0) {
            return 'Opera';
        }
        //Safari
        else if (explorer.indexOf("Safari") >= 0) {
            return 'Safari';
        }
    }
    function method1(tableid) {//整个表格拷贝到EXCEL中
        if (getExplorer() == 'ie') {
            var curTbl = document.getElementById(tableid);
            var oXL = new ActiveXObject("Excel.Application");

            //创建AX对象excel
            var oWB = oXL.Workbooks.Add();
            //获取workbook对象
            var xlsheet = oWB.Worksheets(1);
            //激活当前sheet
            var sel = document.body.createTextRange();
            sel.moveToElementText(curTbl);
            //把表格中的内容移到TextRange中
            sel.select;
            //全选TextRange中内容
            sel.execCommand("Copy");
            //复制TextRange中内容
            xlsheet.Paste();
            //粘贴到活动的EXCEL中
            oXL.Visible = true;
            //设置excel可见属性

            try {
                var fname = oXL.Application.GetSaveAsFilename("Excel.xls", "Excel Spreadsheets (*.xls), *.xls");
            } catch (e) {
                print("Nested catch caught " + e);
            } finally {
                oWB.SaveAs(fname);

                oWB.Close(savechanges = false);
                //xls.visible = false;
                oXL.Quit();
                oXL = null;
                //结束excel进程，退出完成
                //window.setInterval("Cleanup();",1);
                idTmr = window.setInterval("Cleanup();", 1);

            }

        }
        else {
            tableToExcel('tb_dept')
        }
    }
    function Cleanup() {
        window.clearInterval(idTmr);
        CollectGarbage();
    }
    var tableToExcel = (function () {
        var uri = 'data:application/vnd.ms-excel;base64,',
            template = '<html xmlns:o="urn:schemas-microsoft-com:office:office" xmlns:x="urn:schemas-microsoft-com:office:excel" xmlns="http://www.w3.org/TR/REC-html40"><head><!--[if gte mso 9]><xml><x:ExcelWorkbook><x:ExcelWorksheets><x:ExcelWorksheet><x:Name>{worksheet}</x:Name><x:WorksheetOptions><x:DisplayGridlines/></x:WorksheetOptions></x:ExcelWorksheet></x:ExcelWorksheets></x:ExcelWorkbook></xml><![endif]--></head><body><table>{table}</table></body></html>',
            base64 = function (s) { return window.btoa(unescape(encodeURIComponent(s))) },
            format = function (s, c) {
                return s.replace(/{(\w+)}/g,
                    function (m, p) { return c[p]; })
            }
        return function (table, name) {
            if (!table.nodeType) table = document.getElementById(table)
            var ctx = { worksheet: name || 'Worksheet', table: table.innerHTML }
            window.location.href = uri + base64(format(template, ctx))
        }
    })()
</script>