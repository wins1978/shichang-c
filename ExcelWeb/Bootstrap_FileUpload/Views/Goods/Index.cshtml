<script type="text/javascript" src="~/Scripts/knockout-3.4.2.js"></script>
<script type="text/javascript" src="~/Scripts/knockout.mapping-latest.js"></script>
<script type="text/javascript" src="~/Scripts/knockout.bootstraptable.js"></script>
<!--http://www.cnblogs.com/landeanfen/p/5400654.html-->
<div class="container body-content">
    <div class="panel panel-default">
        <div class="panel-heading"></div>
        <div class="panel-heading">石粉型号维护</div>
        <div class="panel-heading">
            <div id="toolbar" class="btn-group">
                <button id="btn_add" type="button" class="btn btn-default">
                    <span class="glyphicon glyphicon-plus" aria-hidden="true"></span>新增
                </button>
                <button id="btn_edit" type="button" class="btn btn-default">
                    <span class="glyphicon glyphicon-pencil" aria-hidden="true"></span>修改
                </button>
                <button id="btn_delete" type="button" class="btn btn-default">
                    <span class="glyphicon glyphicon-remove" aria-hidden="true"></span>删除
                </button>
            </div>
            <table id="tb_dept" data-bind="myBootstrapTable:$root">
                <thead>
                    <tr>
                        <th data-checkbox="true"></th>
                        <th data-field="GOODS_NAME">石粉名称</th>
                        <th data-field="GOODS_TYPE">类别</th>
                        <th data-field="ORDER_INDEX">排序</th>
                        <th data-field="NODES">备注</th>
                    </tr>
                </thead>
            </table>
        </div>
    </div>
    <div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title" id="myModalLabel">操作</h4>
                </div>
                <div class="modal-body">
                    <div class="form-group">
                        <label for="txt_GOODS_NAME">石粉名称</label>
                        <input type="text" name="txt_GOODS_NAME" data-bind="value:GOODS_NAME" class="form-control" id="txt_GOODS_NAME">
                    </div>
                    <div class="form-group">
                        <label for="txt_GOODS_TYPE">大类</label>
                        @*<input type="text" name="txt_GOODS_TYPE" data-bind="value:GOODS_TYPE" class="form-control" id="txt_GOODS_TYPE" >*@
                        <select id="txt_GOODS_TYPE" name="txt_GOODS_TYPE" data-bind="options:GOODS_TYPE,optionsText:'Name',optionsValue:'Name'"></select>
                    </div>
                    <div class="form-group">
                        <label for="txt_ORDER_INDEX">排序</label>
                        <input type="text" name="txt_ORDER_INDEX" data-bind="value:ORDER_INDEX" class="form-control" id="txt_ORDER_INDEX">
                    </div>
                    <div class="form-group">
                        <label for="txt_NODES">备注</label>
                        <input type="text" name="txt_NODES" data-bind="value:NODES" class="form-control" id="txt_NODES">
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal"><span class="glyphicon glyphicon-remove" aria-hidden="true"></span>关闭</button>
                    <button type="button" id="btn_submit" class="btn btn-primary" data-dismiss="modal"><span class="glyphicon glyphicon-floppy-disk" aria-hidden="true"></span>保存</button>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- 模态弹出窗内容 -->
<div class="modal" id="y-myModalAdd" tabindex="-1" role="dialog" aria-labelledby="mySmallModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">
                    <span aria-hidden="true">×</span>
                    <span class="sr-only">Close</span>
                </button>
                <h4 class="modal-title">提示</h4>
            </div>
            <div class="modal-body" id="showMsg">

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">确认</button>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    $(function () {
        //1、初始化表格
        tableInit.Init();

        //2、注册增删改事件
        operate.operateInit();
    });

    var initialGoodsType = [
        { Id: 1, Name: "石仔" },
        { Id: 2, Name: "石粉" }
    ];

    //初始化表格
    var tableInit = {
        Init: function () {
            //绑定table的viewmodel
            this.myViewModel = new ko.bootstrapTableViewModel({
                url: url_p + '/Goods/GetGoods',         //请求后台的URL（*）
                method: 'get',                      //请求方式（*）
                //toolbar: '#toolbar',                //工具按钮用哪个容器
                queryParams: function (param) {
                    return { limit: param.limit, offset: param.offset };
                },//传递参数（*）
                pagination: true,                   //是否显示分页（*）
                sidePagination: "server",           //分页方式：client客户端分页，server服务端分页（*）
                pageNumber: 1,                      //初始化加载第一页，默认第一页
                pageSize: 100,                       //每页的记录行数（*）
                pageList: [10, 25, 50, 100]        //可供选择的每页的行数（*）
            });
            ko.applyBindings(this.myViewModel, document.getElementById("tb_dept"));
        }
    };

    //操作
    var operate = {
        //初始化按钮事件
        operateInit: function () {
            this.operateAdd();
            this.operateUpdate();
            this.operateDelete();
            this.DepartmentModel = {
                ID: ko.observable(),
                GOODS_NAME: ko.observable(),
                GOODS_TYPE: ko.observableArray(initialGoodsType),
                ORDER_INDEX: ko.observable(),
                NODES: ko.observable()
            };
        },
        //新增
        operateAdd: function () {
            $('#btn_add').on("click", function () {
                $('#txt_GOODS_NAME').removeAttr("readonly");
                $("#myModal").modal().on("shown.bs.modal", function () {
                    var oEmptyModel = {
                        ID: ko.observable(),
                        GOODS_NAME: ko.observable(),
                        GOODS_TYPE: ko.observableArray(initialGoodsType),
                        ORDER_INDEX: ko.observable(),
                        NODES: ko.observable()
                    };
                    ko.utils.extend(operate.DepartmentModel, oEmptyModel);
                    ko.applyBindings(operate.DepartmentModel, document.getElementById("myModal"));
                    operate.operateSave();
                }).on('hidden.bs.modal', function () {
                    ko.cleanNode(document.getElementById("myModal"));
                });
            });
        },
        //编辑
        operateUpdate: function () {
            $('#btn_edit').on("click", function () {
                var arrselectedData = tableInit.myViewModel.getSelections();
                if (!operate.operateCheck(arrselectedData)) { return; }
                $("#txt_GOODS_NAME").attr("readonly", "readonly");
                var oEmptyModel = {
                    ID: arrselectedData[0].ID,
                    GOODS_NAME: arrselectedData[0].GOODS_NAME,
                    GOODS_TYPE: ko.observableArray(initialGoodsType),
                    ORDER_INDEX: ko.observable(),
                    NODES: arrselectedData[0].NODES
                };


                $("#myModal").modal().on("shown.bs.modal", function () {

                    //将选中该行数据有数据Model通过Mapping组件转换为viewmodel
                    //var oEmptyModel = ko.mapping.fromJS(arrselectedData[0]);
                    ko.utils.extend(operate.DepartmentModel, oEmptyModel);
                    ko.applyBindings(operate.DepartmentModel, document.getElementById("myModal"));
                    $("#txt_GOODS_TYPE").attr('value', arrselectedData[0].GOODS_TYPE);
                    $("#txt_GOODS_TYPE option[value='" + arrselectedData[0].GOODS_TYPE + "']").attr("selected", "selected");
                    operate.operateSave();
                }).on('hidden.bs.modal', function () {
                    //关闭弹出框的时候清除绑定(这个清空包括清空绑定和清空注册事件)
                    $('#txt_GOODS_NAME').removeAttr("readonly");
                    ko.cleanNode(document.getElementById("myModal"));
                });
            });
        },
        //删除
        operateDelete: function () {
            $('#btn_delete').on("click", function () {
                var arrselectedData = tableInit.myViewModel.getSelections();
                $.ajax({
                    url: url_p + "/Goods/Delete",
                    type: "post",
                    contentType: 'application/json',
                    data: JSON.stringify(arrselectedData),
                    success: function (data, status) {
                        var $modal = $('#y-myModalAdd');
                        $modal.modal({ backdrop: 'static' });
                        $("#showMsg").html(data);
                        tableInit.myViewModel.refresh();
                    }
                });
            });
        },
        //保存数据
        operateSave: function () {
            $('#btn_submit').on("click", function () {
                //取到当前的viewmodel
                var oViewModel = operate.DepartmentModel;
                operate.DepartmentModel.GOODS_TYPE($("#txt_GOODS_TYPE").val());
                //将Viewmodel转换为数据model
                var oDataModel = ko.toJS(oViewModel);
                var funcName = oDataModel.ID ? "Update" : "Add";

                $.ajax({
                    url: url_p + "/Goods/" + funcName,
                    type: "post",
                    data: oDataModel,
                    success: function (data, status) {
                        var $modal = $('#y-myModalAdd');
                        $modal.modal({ backdrop: 'static' });
                        $("#showMsg").html(data);
                        $('#txt_GOODS_NAME').removeAttr("readonly");
                        tableInit.myViewModel.refresh();
                    }
                });
            });
        },
        //数据校验
        operateCheck: function (arr) {
            if (arr.length <= 0) {
                alert("请至少选择一行数据");
                return false;
            }
            if (arr.length > 1) {
                alert("只能编辑一行数据");
                return false;
            }
            return true;
        }
    }
</script>
